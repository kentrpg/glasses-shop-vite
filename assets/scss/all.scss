// @import "~bootstrap/scss/bootstrap";

// Custom.scss
// Option B: Include parts of Bootstrap

// // 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
// @import "../../node_modules/bootstrap/scss/functions";
@import "~bootstrap/scss/functions";

// // 2. Include any default variable overrides here
@import "utils/variables";

// // 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/variables-dark";


// 目的：container 設置在最大寬度時左右 padding 0
// 作法：_container_scss %responsive-container-#{$breakpoint} 設置 @if $breakpoint == "xxl"

@import "utils/utilities";

// // 4. Include any default map overrides here

// // 5. Include remainder of required parts
@import "~bootstrap/scss/maps";
@import "~bootstrap/scss/mixins";
@import "~bootstrap/scss/utilities";

// // // 6. Optionally include any other parts as needed
// @import "~bootstrap/scss/root";
// @import "~bootstrap/scss/reboot";
// @import "~bootstrap/scss/type";
// @import "~bootstrap/scss/images";
// @import "~bootstrap/scss/containers";
// @import "~bootstrap/scss/grid";
// @import "~bootstrap/scss/buttons";
// @import "~bootstrap/scss/card";
// @import "~bootstrap/scss/helpers";

// // // 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
// @import "~bootstrap/scss/utilities/api";

// bootstrap.scc 可以替代 component + helpers + utilities API
@import "~bootstrap/scss/bootstrap";

// 8. Add additional custom code here
@import './base/reset';
@import './layout';